# The syntax for rules follows the syntax for snort rules (www.snort.org) 
# <action> <proto> <src_ip> <src_port> -> <dst_ip> <dst_port> (<options>)
#   |         |         |         |         |         |          | 
#   |         |         |         |         |         |          |
#   |         |         |         |         |         |          |
#   |         |         |         |         |         |          |
#   |         |         |         |         |         |          |
#   |         |         |         |         |         |          |
#   |         |         |         |         |         |          |--- 
#   |         |         |         |         |         | sets of key-value
#   |         |         |         |         |         | pairs like below separated by ";":
#   |         |         |         |         |         | (msg:"Trojan attack";pps:10;
#   |         |         |         |         |         | content:0xdeadbeef;)
#   |         |         |         |         |         |-----same as src_port
#   |         |         |         |         |---------Same as src_ip
#   |         |         |         |---------could be one of "1234", "0xfffe",
#   |         |         |                   "snmp", "$my_port"
#   |         |         |                   TODO: Range will be supported soon:
#   |         |         |                         1234-1244
#   |         |         |----------could be one of the following formats:
#   |         |                "10.0.0.1", "$HOME_NET", "$EXTERNAL_NET", "any"
#   |         |--------could be one of "tcp", "udp", "icmp", "any"
#   |---------could be one of "alert", "drop"
#
alert tcp 10.0.0.1 any -> 10.0.0.2 80 (msg:"Malicious tcp data"; content:"diablo";)
alert udp 10.0.0.3 any -> 10.0.0.4 80 (msg:"Malicious udp data"; content:"diablo";)
drop icmp 10.0.0.2 any -> 10.0.0.3 any (reinstate:"true";)  
# Catch all rule for trapping spikes in traffic
alert any any any -> any any (msg:"I see a lot of traffic"; pps:80;) 
